CREATE DATABASE IF NOT EXISTS OFICINA;
USE OFICINA;

------------------- CONSTRUÇÃO DAS TABELAS -----------------------
CREATE TABLE IF NOT EXISTS CLIENTES(
    ID_CLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME_COMPLETO VARCHAR(255) NOT NULL,
    CPF_CNPJ ENUM('CPF','CNPJ') DEFAULT 'CPF',
    CPF_CNPJ_NUMERO VARCHAR(15) NOT NULL,
    NASCIMENTO DATE DEFAULT '1900-01-01',
    TELEFONE VARCHAR(13) NOT NULL,
    ENDERECO VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS VEICULO_CLIENTE(
    ID_VEICULO INT AUTO_INCREMENT,
    ID_CLIENTE INT NOT NULL,
    MODELO VARCHAR(255) NOT NULL,
    ANO VARCHAR(9) NOT NULL,
    MARCA VARCHAR(255) NOT NULL,
    PLACA CHAR(7) NOT NULL,
    PRIMARY KEY (ID_VEICULO,PLACA),
    CONSTRAINT FK_VEICULO_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
);

CREATE TABLE IF NOT EXISTS SETORES(
    ID_SETOR INT PRIMARY KEY AUTO_INCREMENT,
    SETOR_NOME VARCHAR(60),
    SETOR_TELEFONE VARCHAR(13)
);

CREATE TABLE IF NOT EXISTS CARGOS(
    ID_CARGO INT PRIMARY KEY AUTO_INCREMENT,
    ID_SETOR INT NOT NULL,
    CARGO VARCHAR(255),
    SALARIO_PISO FLOAT NOT NULL,
    CONSTRAINT FK_CARGOS FOREIGN KEY (ID_SETOR) REFERENCES SETORES(ID_SETOR)
);

CREATE TABLE IF NOT EXISTS FUNCIONARIOS(
    ID_FUNCIONARIO INT PRIMARY KEY AUTO_INCREMENT,
    FUN_NOME_COMPLETO VARCHAR(255) NOT NULL,
    FUN_CPF CHAR(11) NOT NULL,
    FUN_NASCIMENTO DATE NOT NULL,
    FUN_ENDERECO VARCHAR(255) NOT NULL,
    FUN_TELEFONE VARCHAR(13) NOT NULL,
    FUN_EMAIL VARCHAR(255),
    ID_CARGO INT NOT NULL,
    SALARIO FLOAT NOT NULL,
    INGRESSO_EMPRESA DATE NOT NULL,
    CONSTRAINT FK_FUNCIONARIOS FOREIGN KEY (ID_CARGO) REFERENCES CARGOS(ID_CARGO)
);

CREATE TABLE IF NOT EXISTS MAO_OBRA(
    ID_MAO_OBRA INT PRIMARY KEY AUTO_INCREMENT,
    DESCRICAO VARCHAR(255) NOT NULL,
    VALOR_MAO_OBRA FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS PRODUTOS(
    ID_PRODUTO INT PRIMARY KEY AUTO_INCREMENT,
    PRODUTO VARCHAR(255) NOT NULL,
    MARCA VARCHAR(255) NOT NULL,
    VALOR FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS ESTOQUE(
    ID_PRODUTO INT NOT NULL PRIMARY KEY,
    QUANTIDADE INT NOT NULL,
    CONSTRAINT FK_ESTOQUE FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS(ID_PRODUTO)
);

CREATE TABLE IF NOT EXISTS SERVICO_REALIZADO(
    ID_SERVICO_REALIZADO INT PRIMARY KEY AUTO_INCREMENT,
    ID_CLIENTE INT NOT NULL,
    ID_VEICULO INT NOT NULL,
    ID_FUNCIONARIO INT NOT NULL,
    ID_MAO_OBRA INT NOT NULL,
    ID_PRODUTO INT NOT NULL,
    QUANTIDADE_PRODUTO INT NOT NULL DEFAULT 0,
    SERVICO_ADICIONAL VARCHAR(255) DEFAULT 'SEM ADICIONAL',
    VALOR_ADICIONAL FLOAT DEFAULT 0,
    DATA_SERVICO DATE NOT NULL,
    CONSTRAINT FK_SERVICO_REALIZADO_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE),
    CONSTRAINT FK_SERVICO_REALIZADO_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES VEICULO_CLIENTE(ID_VEICULO),
    CONSTRAINT FK_SERVICO_REALIZADO_FUNCIONARIO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIOS(ID_FUNCIONARIO),
    CONSTRAINT FK_SERVICO_REALIZADO_MAO_OBRA FOREIGN KEY (ID_MAO_OBRA) REFERENCES MAO_OBRA(ID_MAO_OBRA),
    CONSTRAINT FK_SERVICO_REALIZADO_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS(ID_PRODUTO)
);

CREATE TABLE IF NOT EXISTS FORNECEDORES(
    ID_FORNECEDOR INT PRIMARY KEY AUTO_INCREMENT,
    FORNECEDOR VARCHAR(255) NOT NULL,
    FORNECEDOR_CNPJ CHAR(15),
    FORNECEDOR_TELEFONE VARCHAR(13),
    FORNECEDOR_EMAIL VARCHAR(255),
    FORNECEDOR_ENDERECO VARCHAR(255),
    FORNECEDOR_REPRESENTANTE VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS PEDIDO_COMPRAS(
    ID_PEDIDO_COMPRAS INT PRIMARY KEY AUTO_INCREMENT,
    ID_FORNECEDOR INT NOT NULL,
    ID_PRODUTO INT NOT NULL,
    PEDIDO_COMPRAS_QUANTIDADE INT NOT NULL,
    CONSTRAINT FK_PEDIDO_COMPRAS_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDORES(ID_FORNECEDOR),
    CONSTRAINT FK_PEDIDO_COMPRAS_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS(ID_PRODUTO)
);


SHOW TABLES;
DESC CLIENTES;
DESC VEICULO_CLIENTE;
DESC SETORES;
DESC CARGOS;
DESC FUNCIONARIOS;
DESC MAO_OBRA;
DESC PRODUTOS;
DESC ESTOQUE;
DESC SERVICO_REALIZADO;
DESC FORNECEDORES;
DESC PEDIDO_COMPRAS;

------------------ PERSISTINDO INFORMAÇÕES --------------------

INSERT INTO CLIENTES(NOME_COMPLETO,CPF_CNPJ,CPF_CNPJ_NUMERO,NASCIMENTO,TELEFONE,ENDERECO,EMAIL) VALUES
    ('RAFAEL SILVA DA SILVA','CPF','12345678912','1994-03-15','11-91234-5678','RUA UM,01 - BAIRRO 01 - CIDADE 01 - SP','RAFAELSS@EMAIL.COM'),
    ('CARRO ALUGADO SA','CNPJ','601234567891234',DEFAULT,'11-1234-9879','RUA DOIS,02 - BAIRRO 02 - CIDADE 02 - SP','CARROALUGADO@EMAIL.COM'),
    ('JOÃO ALVES ALVES','CPF','32112332101','1960-11-20','11-91321-4654','AVENIDA TRÊS,03 - BAIRRO 03 - CIDADE 02 - SP','JOAOAA@EMAIL.COM'),
    ('MARIA OLIVEIRA OLIVEIRA','CPF','65498745602','2000-05-17','11-96454-6611','RUA QUATRO,04 - BAIRRO 04 - CIDADE 03 - SP','MARIAOO@EMAIL.COM'),
    ('TRANSPORTADORA LEVAREI LTDA','CNPJ','668889464432112',DEFAULT,'11-6466-4455','AVENIDA CINCO,05 - BAIRRO 05 - CIDADE 05 - SP','TRANSPORTEBUSAL@EMAIL.COM');
SELECT * FROM CLIENTES;

INSERT INTO VEICULO_CLIENTE(ID_CLIENTE,MODELO,ANO,MARCA,PLACA) VALUES
    (1,'RENEGADE 1.8 16V FLEX SPORT AUTOMÁTICO','2021/2021','JEEP','ABC1B34'),
    (2,'KWID 1.0 12V SCE FLEX INTENSE MANUAL','2022/2023','RENAULT','BEE4R22'),
    (2,'KWID 1.0 12V SCE FLEX INTENSE MANUAL','2022/2023','RENAULT','BEE5R22'),
    (3,'ETIOS 1.3 X 16V FLEX MANUAL','2017/2018','TOYOTA','LSN4I49'),
    (4,'PULSE 1.0 TURBO 200 FLEX DRIVE CVT','2021/2022','FIAT','BRA2E19'),
    (5,'DAILY 2.3 HPI DIESEL 30S13 CHASSI MANUAL','2019/2019','IVECO','PHL4F06');
SELECT * FROM VEICULO_CLIENTE;

INSERT INTO SETORES(SETOR_NOME,SETOR_TELEFONE) VALUES
    ('RECEPÇÃO','11-1234-0001'),
    ('ADMINISTRAÇÃO','11-1234-0002'),
    ('OFICINA','11-1234-0003'),
    ('INSPEÇÃO','11-1234-0005'),
    ('ALMOXARIFADO','11-1234-0006');
SELECT * FROM SETORES;

INSERT INTO CARGOS(ID_SETOR,CARGO,SALARIO_PISO) VALUES
    (1,'RECEPCIONISTA',2000),
    (2,'AUXILIAR ADMINISTRATIVO',1800),
    (2,'GERENTE ADMINISTRATIVO',3500),
    (2,'ANALISTA ADMINISTRATIVO',2500),
    (3,'MECÂNICO',2500),
    (3,'MECÂNICO LÍDER',3500),
    (4,'INSPETOR DE QUALIDADE', 2200),
    (4,'ANALISTA DA QUALIDADE', 3000),
    (5,'ALMOXARIFE',2000),
    (5,'COORDENADOR DE ALMOXARIFADO',2800);
SELECT * FROM CARGOS;

INSERT INTO FUNCIONARIOS(FUN_NOME_COMPLETO,FUN_CPF,FUN_NASCIMENTO,FUN_ENDERECO,FUN_TELEFONE,FUN_EMAIL,ID_CARGO,SALARIO,INGRESSO_EMPRESA) VALUES
    ('MARIA MENDES MENDES','13544595101','1990-11-02','RUA DEZOITO,18 - BAIRRO 07 - CIDADE 01 - SP','11-95555-6666','MARIAMM@EMAIL.COM',1,2500,'2015-03-12'),
    ('ROGÉRIO FAGUNDES FAGUNDES','13545555601','1997-07-12','RUA CEM, 100 - BAIRRO 10 - CIDADE 03 - SP','11-96666-5555','ROGERIOFF@EMAIL.COM',5,2850,'2017-05-02'),
    ('GABRIEL SOARES SOARES','13554644402','2000-02-15','RUA VINTE,20 - BAIRRO 01 - CIDADE 02 - SP','11-94444-5555','GABSSS@EMAIL.COM',2,1800,'2022-01-16'),
    ('RAFAEL MOREIRA MOREIRA','16513214502','1992-05-16','AVENIDA TREZENTOS,300 - BAIRRO 02 - CIDADE 01 - SP','11-95555-4444','RAFAMM@EMAIL.COM',5,3100,'2014-03-18'),
    ('LUCAS SILVA SILVA','13454654601','1990-08-01','RUA MIL,1000 - BAIRRO 02 - CIDADE 03 - SP','11-97777-6666','LUCASSS@EMAIL.COM',6,4300,'2013-03-18'),
    ('ALEX SANTOS SANTOS','19964432103','1990-02-02','AVENIDA MILHÃO,101 - BAIRRO 01 - CIDADE 01 - SP','11-97777-5555','ALEXSS@EMAIL.COM',3,4000,'2017-05-16'),
    ('SARAH GONÇALVES GONÇALVES','14539415603','1998-06-06','RUA DOIS,05 - BAIRRO 10 - CIDADE 03 - SP','11-945456565','SARAHGG@EMAIL.COM',4,2800,'2015-02-15'),
    ('ARTHUR PEREIRA PEREIRA','13646677703','2000-01-10','RUA DOIS TRÊS,23 - BAIRRO 05 - CIDADE 04 - SP','11-93212-3212','ARTHURPP@EMAIL.COM',7,2600,'2019-01-27'),
    ('MATHEUS FONSECA FONSECA','13598465705','1995-05-13','AVENIDA CINCO DOIS,52 - BAIRRO 03 - CIDADE 3 - SP','11-93312-3312','MATHEUSFF@EMAIL.COM',8,3600,'2015-11-09'),
    ('BRUNO MENEZES MENEZES','19697632105','2004-01-11','RUA TRINTA,30 - BAIRRO 06 - CIDADE 06 - SP','11-96666-4444','BRUNOMM@EMAIL.COM',9,2100,'2022-02-20'),
    ('JOÃO MACIEIRA MACIEIRA','14115116106','1998-06-27','AVENIDA CENTONOVE,109 - BAIRRO 01 - CIDADE 02 - SP','11-96969-9696','JOAOMM@EMAIL.COM',10,3400,'2015-01-20');
SELECT * FROM FUNCIONARIOS;

INSERT INTO MAO_OBRA(DESCRICAO,VALOR_MAO_OBRA) VALUES
    ('TROCA DE PNEU',0),
    ('TROCA ÓLEO',50),
    ('ALINHAMENTO E BALANCEAMENTO',150),
    ('TROCA DO FILTRO DO AR CONDICIONADO',45),
    ('MARTELINHO DE OURO', 200);
SELECT * FROM MAO_OBRA;

INSERT INTO PRODUTOS(PRODUTO,MARCA,VALOR) VALUES
    ('SEM PRODUTO','',0),
    ('ÓLEO DE MOTOR 5W-30 LL','LUBRAT',103.10),
    ('ÓLEO DE MOTOR 0W-20 DX','LUBRAT',75.95),
    ('ÓLEO DE MOTOR 15W-40','LUBRAT',31.50),
    ('FILTRO DE AR CODICIONADO','FILTREX', 20),
    ('JOGO DE 4 PNEUS ARO 14 175/70R14','PERILLE',1200),
    ('JOGO DE 4 PNEUS ARO 15 185/60R15','PERILLE',1700),
    ('JOGO DE 4 PNEUS ARO 17 225/45R17','PERILLE',2100);
SELECT * FROM PRODUTOS;

INSERT INTO ESTOQUE(ID_PRODUTO,QUANTIDADE) VALUES
    (1,0),
    (2,16),
    (3,12),
    (4,11),
    (5,20),
    (6,10),
    (7,4),
    (8,11);
SELECT * FROM ESTOQUE;

INSERT INTO FORNECEDORES(FORNECEDOR,FORNECEDOR_CNPJ,FORNECEDOR_TELEFONE,FORNECEDOR_EMAIL,FORNECEDOR_ENDERECO,FORNECEDOR_REPRESENTANTE) VALUES
    ('LOJA DO MECANICO LTDA','666647777855559','11-4645-6598','LOJADOMECANICO@EMAIL.COM','AVENIDA CENTRAL, 123 - BAIRRO 12 - CIDADE 07 - SP','ROBERTO BOLÃNOS'),
    ('AUTO MOTIVO PEÇAS LTDA','646657648987878','11-4987-9876','AUTOMOTIVOPECAS@EMAIL.COM','AVENIDA MEIO,50 - BAIRRO 5 - CIDADE 5 - SP','MIGUEL BUSH'),
    ('PEÇAS DE CARRO LTDA','555553333322222','11-4333-3334','PECASDECARRO@EMAIL.COM','AVENIDA DO CARRO, 2 - BAIRRO 2 - CIDADE 6 - SP','DIEGO FAKERIANO');
SELECT * FROM FORNECEDORES;

INSERT INTO PEDIDO_COMPRAS(ID_FORNECEDOR,ID_PRODUTO,PEDIDO_COMPRAS_QUANTIDADE) VALUES
    (1,2,8),
    (1,3,10),
    (1,4,20),
    (3,7,7);
SELECT * FROM PEDIDO_COMPRAS;

INSERT INTO SERVICO_REALIZADO(ID_CLIENTE,ID_VEICULO,ID_FUNCIONARIO,ID_MAO_OBRA,ID_PRODUTO,QUANTIDADE_PRODUTO,SERVICO_ADICIONAL,VALOR_ADICIONAL,DATA_SERVICO) VALUES
    (1,1,2,2,2,1,DEFAULT,DEFAULT,'2023-06-28'),
    (2,2,2,3,1,DEFAULT,DEFAULT,DEFAULT,'2023-06-29'),
    (2,3,4,5,1,DEFAULT,DEFAULT,DEFAULT,'2023-06-30'),
    (3,4,4,5,1,DEFAULT,'INSTALAÇÃO ALARME E CORREÇÃO DA FIAÇÃO',100,'2023-07-03'),
    (4,5,5,4,5,1,DEFAULT,DEFAULT,'2023-07-04'),
    (5,6,5,1,7,1,DEFAULT,DEFAULT,'2023-07-05'),
    (5,6,5,2,4,1,DEFAULT,DEFAULT,'2023-07-05');
    SELECT * FROM SERVICO_REALIZADO;


---------------------------- CRIANDO VIEWS -----------------------------------

-- RELAÇÃO CLIENTE/VEICULO
CREATE VIEW RELACAO_CLIENTE_VEICULO
AS
SELECT C.NOME_COMPLETO AS NOME,VC.MODELO,VC.MARCA,VC.PLACA,VC.ANO 
    FROM CLIENTES C,VEICULO_CLIENTE VC 
    WHERE C.ID_CLIENTE = VC.ID_CLIENTE;

-- VALOR TOTAL GASTO POR CLIENTE
CREATE VIEW GASTO_POR_CLIENTE
AS
SELECT C.NOME_COMPLETO AS NOME,ROUND(SUM(P.VALOR) + SUM(SR.VALOR_ADICIONAL) + SUM(MO.VALOR_MAO_OBRA),2) AS 'CUSTO_TOTAL'
    FROM CLIENTES C 
    INNER JOIN SERVICO_REALIZADO SR ON C.ID_CLIENTE = SR.ID_CLIENTE 
    INNER JOIN PRODUTOS P ON P.ID_PRODUTO = SR.ID_PRODUTO
    INNER JOIN MAO_OBRA MO ON MO.ID_MAO_OBRA = SR.ID_MAO_OBRA
    GROUP BY C.ID_CLIENTE;

-- SERVIÇOS REALIZADOS
CREATE VIEW SERVICOS_REALIZADOS
AS
SELECT ID_SERVICO_REALIZADO,SR.DATA_SERVICO AS DATA, C.NOME_COMPLETO AS NOME, CONCAT(VC.MODELO,'- ',VC.MARCA,'- ',VC.ANO,'- ',VC.PLACA) AS VEICULO,
    MO.DESCRICAO AS SERVIÇO, MO.VALOR_MAO_OBRA AS 'VALOR_DA_MÃO_DE_OBRA', CONCAT(P.PRODUTO,' ',P.MARCA) AS 'PRODUTO_UTILIZADO',
    SR.QUANTIDADE_PRODUTO, P.VALOR AS 'VALOR_DO_PRODUTO', SR.SERVICO_ADICIONAL AS 'SERVICO_ADICIONAL', SR.VALOR_ADICIONAL AS 'VALOR_ADICIONAL',
    ROUND(P.VALOR + SR.VALOR_ADICIONAL + MO.VALOR_MAO_OBRA,2) AS TOTAL
    FROM SERVICO_REALIZADO SR
    INNER JOIN CLIENTES C ON C.ID_CLIENTE = SR.ID_CLIENTE
    INNER JOIN VEICULO_CLIENTE VC ON VC.ID_VEICULO = SR.ID_VEICULO
    INNER JOIN MAO_OBRA MO ON MO.ID_MAO_OBRA = SR.ID_MAO_OBRA
    INNER JOIN PRODUTOS P ON P.ID_PRODUTO = SR.ID_PRODUTO
    ORDER BY SR.DATA_SERVICO;

-- PEDIDO DE COMPRAS X FORNECEDOR
CREATE VIEW PEDIDO_DE_COMPRAS
AS
SELECT PC.ID_PEDIDO_COMPRAS AS NUMERO_PEDIDO,PRO.ID_PRODUTO, PRO.PRODUTO, PRO.MARCA,PEDIDO_COMPRAS_QUANTIDADE AS QUANTIDADE, FORNECEDOR
    FROM PEDIDO_COMPRAS PC
    INNER JOIN PRODUTOS PRO ON PRO.ID_PRODUTO = PC.ID_PRODUTO
    INNER JOIN FORNECEDORES F ON F.ID_FORNECEDOR = PC.ID_FORNECEDOR;

-- NÍVEL ESTOQUE
CREATE VIEW NIVEL_ESTOQUE
AS
SELECT P.ID_PRODUTO, P.PRODUTO, P.MARCA, E.QUANTIDADE FROM PRODUTOS P
    INNER JOIN ESTOQUE E ON E.ID_PRODUTO = P.ID_PRODUTO
    WHERE PRODUTO <> 'SEM PRODUTO';


------------------ FILTRO DE VIEWS -------------------------
-- VIEW RELAÇÃO ENTRE CLIENTES E VEICULOS
SELECT * FROM RELACAO_CLIENTE_VEICULO;

-- VEICULOS DO MODELO RENEGADE
SELECT * FROM RELACAO_CLIENTE_VEICULO WHERE MODELO LIKE '%RENEGADE%'; 

-- VEICULOS DO ANO 2021 OU POSTERIOR DEVE SER OFERECIDO REVISÃO DOS 36 OU 64 MIL KM, ABAIXO SERÁ OFERECIDO REVISÃO PÓS GARANTIA
SELECT NOME,MODELO,MARCA,ANO, CASE
    WHEN ANO >= 2021 THEN 'OFERECER REVISÃO 36 OU 64 MIL KM' 
    ELSE 'OFERECER REVISÃO PÓS-GARANTIA'
    END AS REVISÃO 
    FROM RELACAO_CLIENTE_VEICULO;

-- VIEW GASTOS TOTAL POR CLIENTE
SELECT * FROM GASTO_POR_CLIENTE;
-- CLIENTES CUJO CUSTO TOTAL NA OFICINA SEJA ACIMA DE R$ 300,00
SELECT * FROM GASTO_POR_CLIENTE HAVING CUSTO_TOTAL > 300;

-- VIEW SERVIÇOS REALIZADOS
SELECT * FROM SERVICOS_REALIZADOS;

-- SERVIÇOS ADICIONAIS REALIZADOS
SELECT * FROM SERVICOS_REALIZADOS WHERE SERVICO_ADICIONAL <> 'SEM ADICIONAL';

-- REALIZADO MAIS DE UM SERVIÇO NUM MESMO CARRO
SELECT DISTINCT S.ID_SERVICO_REALIZADO AS ID,S.DATA,S.NOME,S.VEICULO,S.SERVIÇO,S.VALOR_DA_MÃO_DE_OBRA,S.PRODUTO_UTILIZADO,
    S.QUANTIDADE_PRODUTO AS 'QNT PRODUTO',S.VALOR_DO_PRODUTO,S.SERVICO_ADICIONAL,S.VALOR_ADICIONAL, TOTAL
    FROM SERVICOS_REALIZADOS S
    INNER JOIN SERVICO_REALIZADO SR ON SR.DATA_SERVICO = S.DATA
    WHERE VEICULO IN (SELECT VEICULO FROM SERVICOS_REALIZADOS GROUP BY VEICULO HAVING COUNT(*) > 1);

-- VIEW PEDIDO DE COMPRAS
SELECT * FROM PEDIDO_DE_COMPRAS;

-- ABASTECIMENTO DO ESTOQUE (VIEW PEDIDO_DE_COMPRAS E NIVEL_ESTOQUE)
SELECT NUMERO_PEDIDO, PC.ID_PRODUTO,PC.PRODUTO, PC.QUANTIDADE AS 'QUANTIDADE PEDIDO', NE.QUANTIDADE AS 'QUANTIDADE ESTOQUE', 
    (PC.QUANTIDADE + NE.QUANTIDADE) AS 'QUANTIDADE ABASTECIDA'
    FROM PEDIDO_DE_COMPRAS PC
    INNER JOIN NIVEL_ESTOQUE NE ON NE.ID_PRODUTO = PC.ID_PRODUTO;

-- VIEW NÍVEL DO ESTOQUE
SELECT * FROM NIVEL_ESTOQUE;

-- INDICADOR DO NÍVEL DO ESTOQUE
SELECT ALL ID_PRODUTO,PRODUTO,MARCA,QUANTIDADE, CASE
	WHEN ID_PRODUTO = 2 AND QUANTIDADE < 12 THEN 'BAIXO'
    WHEN ID_PRODUTO = 3 AND QUANTIDADE < 10 THEN 'BAIXO'
    WHEN ID_PRODUTO = 4 AND QUANTIDADE < 15 THEN 'BAIXO'
    WHEN ID_PRODUTO = 5 AND QUANTIDADE < 10 THEN 'BAIXO'
    WHEN ID_PRODUTO = 6 AND QUANTIDADE < 10 THEN 'BAIXO'
    WHEN ID_PRODUTO = 7 AND QUANTIDADE < 10 THEN 'BAIXO'
    WHEN ID_PRODUTO = 8 AND QUANTIDADE < 10 THEN 'BAIXO'
    ELSE 'NORMAL'
    END AS NÍVEL
	FROM NIVEL_ESTOQUE;
